version: '3.8'

services:
  api:
    image: ${IMAGE}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - APP_ENV=production
      - PG_DSN=postgres://user:password@postgres:5432/app?sslmode=disable # Use a managed DB in prod
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=password
    secrets:
      - jwt_secret
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "8080:8080" # Exposed via Traefik in a real setup
    networks:
      - web

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web # Should be on a private network with the API

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "password"]
    networks:
      - web # Should be on a private network with the API

volumes:
  postgres_data:

secrets:
  jwt_secret:
    external: true

networks:
  web:
    driver: overlay
