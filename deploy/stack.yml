version: '3.8'

services:
  fraudai-service:
    image: ${IMAGE}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - APP_ENV=${APP_ENV}
      - PG_DSN=${PG_DSN}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - VENDOR_BASE_URL=${VENDOR_BASE_URL}
    secrets:
      - jwt_secret
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
    networks:
      - traefik-public
      - fraudai-internal
      - mlops-internal
      - redis-internal
    labels:
      - traefik.enable=true
      - traefik.http.services.fraudai-service.loadbalancer.server.port=8080
      - traefik.http.routers.fraudai-service.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.fraudai-service.entrypoints=websecure
      - traefik.http.routers.fraudai-service.tls=true
      - traefik.http.routers.fraudai-service.tls.certresolver=leresolver

secrets:
  jwt_secret:
    external: true

networks:
  redis-internal:
    external: true
  mlops-internal:
    external: true
  fraudai-internal:
    external: true
  traefik-public:
    external: true
