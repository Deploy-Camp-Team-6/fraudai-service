version: '3.8'

networks:
  traefik-public:
    driver: overlay
    external: true
  fraudai-internal:
    external: true
  mlops-internal:
    external: true
  redis-internal:
    external: true

secrets:
  jwt_secret:
    external: true

services:
  fraudai-service:
    image: ${IMAGE}
    networks:
      - traefik-public
      - fraudai-internal
      - mlops-internal
      - redis-internal
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.services.fraudai-service.loadbalancer.server.port=8080
        - traefik.http.routers.fraudai-service.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.fraudai-service.entrypoints=websecure
        - traefik.http.routers.fraudai-service.tls=true
        - traefik.http.routers.fraudai-service.tls.certresolver=leresolver
    environment:
      APP_ENV: ${APP_ENV}
      PG_DSN: ${PG_DSN}
      REDIS_ADDR: ${REDIS_ADDR}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      VENDOR_BASE_URL: ${VENDOR_BASE_URL}
      LOG_LEVEL: warn
      JWT_SECRET_FILE: /run/secrets/jwt_secret
    secrets:
      - source: jwt_secret
        target: jwt_secret
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3