name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Install sqlc
      run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

    - name: Install migrate
      run: go install github.com/golang-migrate/migrate/v4/cmd/migrate@latest

    - name: Tidy
      run: go mod tidy

    - name: Vet
      run: go vet ./...

    - name: Lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.59

    - name: Test
      env:
        PG_DSN: postgres://user:password@localhost:5432/app?sslmode=disable
        REDIS_ADDR: localhost:6379
      run: go test -v -race ./...

    - name: Build
      run: go build -v ./...

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
        labels: |
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.created=${{ fromJSON(steps.meta.outputs.json).created }}
          org.opencontainers.image.revision=${{ github.sha }}
